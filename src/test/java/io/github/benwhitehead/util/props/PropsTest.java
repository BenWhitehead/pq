package io.github.benwhitehead.util.props;

import com.google.common.collect.Lists;
import org.junit.Test;

import java.io.StringReader;
import java.io.StringWriter;
import java.util.Collections;

import static org.assertj.core.api.Assertions.assertThat;

/**
 * @author Ben Whitehead
 */
public class PropsTest {

    @Test
    public void testSimple() throws Exception {
        final StringReader in = new StringReader("key1=value1");
        final StringWriter out = new StringWriter();
        final Props props = new Props("/test/file.props", Collections.<String>emptyList(), in, out);
        props.run();

        final String actual = out.toString();
        assertThat(actual).startsWith("#Generated by props v");  // the version is interpolated by maven
        assertThat(actual).contains(" from /test/file.props" + System.lineSeparator());
        assertThat(actual).contains("key1=value1" + System.lineSeparator());
    }

    @Test
    public void testOverrideValue() throws Exception {
        final StringReader in = new StringReader("key1=value1");
        final StringWriter out = new StringWriter();
        final Props props = new Props("/test/file.props", Lists.newArrayList("key1=override1"), in, out);
        props.run();

        final String actual = out.toString();
        assertThat(actual).contains("key1=override1" + System.lineSeparator());
    }

    @Test
    public void testAddValue() throws Exception {
        final StringReader in = new StringReader("key1=value1");
        final StringWriter out = new StringWriter();
        final Props props = new Props("/test/file.props", Lists.newArrayList("new1=newValue1"), in, out);
        props.run();

        final String actual = out.toString();
        assertThat(actual).contains("key1=value1" + System.lineSeparator());
        assertThat(actual).contains("new1=newValue1" + System.lineSeparator());
    }

    @Test
    public void testSetSameKeyTwice() throws Exception {
        final StringReader in = new StringReader("key1=value1");
        final StringWriter out = new StringWriter();
        final Props props = new Props("/test/file.props", Lists.newArrayList("new1=newValue1", "new1=newValue2"), in, out);
        props.run();

        final String actual = out.toString();
        assertThat(actual).contains("key1=value1" + System.lineSeparator());
        assertThat(actual).contains("new1=newValue2" + System.lineSeparator());
    }

    @Test
    public void testSetSameKeyThrice() throws Exception {
        final StringReader in = new StringReader("key1=value1");
        final StringWriter out = new StringWriter();
        final Props props = new Props(
                "/test/file.props",
                Lists.newArrayList(
                        "new1=newValue1",
                        "new1=newValue2",
                        "new1=newValue3"
                ),
                in,
                out
        );
        props.run();

        final String actual = out.toString();
        assertThat(actual).contains("key1=value1" + System.lineSeparator());
        assertThat(actual).contains("new1=newValue3" + System.lineSeparator());
    }

}
